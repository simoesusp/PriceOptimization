from random import randint
from mtgright2rw import GeneralListFunction
from mtgright2rw import CreateCromossomes
from mtgright2rw import BreedingProcess
from mtgright2rw import Mutation
import time
import os
#from mtgright import FindTheBest

webpage=input("Insira abaixo o endere√ßo virtual do seu deck no site 'Ligamagic'\n")

All=(GeneralListFunction(webpage))

"""
All=[[['4', 'Blink of an Eye'], ['4', 'Sigil of Sleep'], ['4', 'Molting Snakeskin']], [['Neowalkers Geek Store', 'Taverna Geek', 'MTG Caxias Cards', 'Konklave FunStore', 'Mulligan Geek Store', 'Cards Store', 'Kinoene Cards', 'Hobby Center', 'Portal', 'Treasure Cards', 'Pi Games', 'Arsenal Nerd', 'Nerdz Curitiba', 'Basics Cards', 'Medieval Cards', 'Jaw Games', 'Skull Games', 'Power Up Games', 'PlayGround', 'VAULT', 'Loja Grimorium', 'Loja Caverna do Drag&atilde;o', 'Arena Hobby Store', 'City Class Games', 'MTG Cards Games', 'Epic Game', 'Top Deck RN', 'Tutubahia', 'DeckMasterGames', 'Cards Of Paradise', 'LOJA CALABOU&Ccedil;O - HOBBIES E COLECION&Aacute;VEIS', 'Card Tutor', 'Load or Cast', 'ManaFix.net', 'Player`s Stop', 'House of Cards - Card Games', 'Pante&atilde;o Games', 'Lets Collect', 'XPlace', 'Miragem Hobby', 'Newstation', 'Mineral Games', 'Nerdz Cards', 'RED Jogos', 'Vila Celta Hobby Store', 'Cards e Games', 'Flow Games', 'Loja de Cartinhas', 'Legends Game Store', 'Inside Games', 'Livraria do Infinito - MagicJebb', 'Cards Outlet', 'AnimeToys Sorocaba', 'Elder Dragon Brasil', 'Tokenlandia Cards', 'DrawGO. Games', 'Magic Leste', 'Tabuleria', 'Porto Livre Games', 'Loja Drop1', 'Universo Magic', "Gideon\\'s Palace", 'Condado Card Games', 'Bazar de Bagd&aacute;', 'Power9', 'Loja Blood Moon', 'VampireX TCG', 'Liga Arena', 'Reino Magic', 'Prime MTG', 'MTG Brasil', 'Magic Club', 'Chuck TCG', 'ProNerd', 'Magicbembarato', 'TCGeeK', 'Goblin Hero Store', 'Ascens&atilde;o', 'CL TCG', 'Segura Card & Games', "Pharaoh\\'s Shop", 'Millennium Cards & Games', 'Legion Board & Card Games', 'Armada Nerd Hobby Store', 'Toca do Quati', 'C&uacute;pula do Trov&atilde;o', 'Cabala MtG', 'Rayearth Games', 'Moinho de Vento Geek Store', 'Magic Store Brasil'], [[[0.35, 0.35, 0.35, 0.35], [11.98, 0.0, 0.0, 0.0], [0, 0, 0, 0]], [[0.15, 0.15, 0.15, 0.15], [2.25, 2.25, 2.25, 0.0], [0.15, 0.15, 0.15, 0.15]], [[0.39, 0.39, 0.39, 0.49], [0, 0, 0, 0], [0.25, 0.25, 0.25, 0.25]], [[0.5, 0.5, 0.5, 0.5], [0, 0, 0, 0], [0.5, 0.5, 0.5, 0.5]], [[0.75, 0.75, 0.75, 0.75], [2.5, 2.5, 2.5, 2.5], [0.25, 0.25, 0.25, 0.25]], [[0.49, 0.49, 0.49, 0.49], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.49, 0.49, 0.49, 0.49], [2.49, 2.49, 2.49, 2.49], [0.25, 0.25, 0.27, 0.95]], [[0.2, 0.2, 0.2, 0.2], [2.0, 2.0, 2.0, 2.0], [0, 0, 0, 0]], [[0.75, 0.75, 0.0, 0.0], [0, 0, 0, 0], [0.25, 0.25, 0.25, 0.25]], [[2.69, 0.0, 0.0, 0.0], [0, 0, 0, 0], [0.14, 0.14, 0.14, 0.14]], [[0.0, 0.75, 0.75, 0.75], [0, 0, 0, 0], [0.25, 0.25, 0.25, 0.25]], [[0.12, 0.12, 0.12, 0.12], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.2, 0.2, 0.2, 0.2], [0, 0, 0, 0], [0.1, 0.1, 0.1, 0.1]], [[0.08, 0.0, 0.0, 0.0], [0.59, 1.79, 0.0, 0.0], [0, 0, 0, 0]], [[0.23, 0.0, 0.0, 0.0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.25, 0.25, 0.25, 0.25], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.45, 0.99, 0.99, 0.0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.5, 0.5, 0.5, 0.5], [0, 0, 0, 0], [0.33, 0.33, 0.33, 0.33]], [[0.99, 0.99, 0.99, 0.99], [0, 0, 0, 0], [0.2, 0.2, 0.2, 0.2]], [[0.35, 3.5, 3.5, 0.0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.99, 0.99, 0.99, 0.99], [2.5, 2.5, 0.0, 0.0], [0.25, 0.25, 0.25, 0.25]], [[0.2, 0.0, 0.0, 0.0], [0, 0, 0, 0], [0.2, 0.2, 0.2, 0.2]], [[0.25, 0.0, 0.0, 0.0], [0, 0, 0, 0], [0.2, 0.0, 0.0, 0.0]], [[0.75, 0.75, 0.75, 0.75], [0, 0, 0, 0], [0.45, 0.45, 0.45, 0.45]], [[0.5, 0.5, 0.5, 0.5], [0, 0, 0, 0], [0.25, 0.25, 0.25, 0.25]], [[0.75, 0.75, 0.75, 0.75], [2.25, 2.25, 2.25, 2.25], [0.25, 0.25, 0.25, 0.25]], [[0.5, 0.5, 0.5, 0.5], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.63, 0.63, 0.0, 0.0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.9, 0.9, 0.9, 0.9], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.75, 0.75, 0.75, 0.75], [0, 0, 0, 0], [0.25, 0.25, 0.25, 0.25]], [[0.08, 0.08, 0.08, 0.08], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.5, 0.5, 0.5, 0.5], [1.95, 1.95, 1.95, 0.0], [0.3, 0.3, 0.3, 0.3]], [[0.3, 0.3, 0.3, 0.3], [2.25, 0.0, 0.0, 0.0], [0.2, 0.2, 0.2, 0.2]], [[0.45, 0.45, 0.45, 0.45], [0, 0, 0, 0], [0.15, 0.15, 0.15, 0.15]], [[0.35, 0.35, 0.35, 0.35], [1.99, 1.99, 0.0, 0.0], [0.15, 0.15, 0.15, 0.15]], [[0.95, 0.95, 0.95, 0.95], [0, 0, 0, 0], [0.25, 0.25, 0.25, 0.25]], [[3.0, 3.0, 3.0, 3.0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.45, 0.45, 0.45, 0.45], [0, 0, 0, 0], [0.23, 0.23, 0.23, 0.23]], [[0.9, 0.9, 0.9, 0.9], [0, 0, 0, 0], [0.3, 0.3, 0.3, 0.3]], [[0.95, 0.95, 0.95, 0.0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.4, 0.4, 0.4, 0.4], [12.0, 0.0, 0.0, 0.0], [0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5], [0, 0, 0, 0], [0.2, 0.2, 0.2, 0.2]], [[0.5, 0.5, 0.5, 0.5], [0, 0, 0, 0], [0.25, 0.25, 0.25, 0.25]], [[0.5, 0.5, 0.5, 0.5], [1.9, 0.0, 0.0, 0.0], [0.25, 0.25, 0.25, 0.25]], [[0.99, 0.99, 0.99, 0.0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.28, 0.28, 0.28, 0.28], [0, 0, 0, 0], [0.2, 0.2, 0.2, 0.2]], [[0.22, 0.22, 0.22, 0.22], [0, 0, 0, 0], [0.11, 0.11, 0.11, 0.11]], [[0.18, 0.18, 0.18, 0.18], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.44, 0.44, 0.44, 0.44], [0, 0, 0, 0], [0, 0, 0, 0]], [[1.0, 1.0, 1.0, 1.0], [0, 0, 0, 0], [0.25, 0.25, 0.25, 0.25]], [[0.1, 0.1, 0.1, 0.0], [3.8, 0.0, 0.0, 0.0], [0.1, 0.1, 0.1, 0.1]], [[0.3, 0.3, 0.3, 0.3], [1.89, 1.89, 1.89, 1.89], [0.23, 0.23, 0.23, 0.23]], [[0.45, 0.45, 0.0, 0.0], [0, 0, 0, 0], [0.45, 0.45, 0.45, 0.45]], [[0.5, 0.5, 0.5, 0.5], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.5, 0.5, 0.5, 0.0], [0, 0, 0, 0], [2.0, 0.0, 0.0, 0.0]], [[0.49, 0.49, 0.49, 0.49], [0, 0, 0, 0], [0.14, 0.14, 0.14, 0.14]], [[0.24, 0.24, 0.24, 0.24], [0, 0, 0, 0], [0.14, 0.14, 0.14, 0.14]], [[0.5, 0.5, 0.6, 0.6], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.38, 0.38, 0.38, 0.38], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.2, 0.2, 0.2, 0.2], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.15, 0.15, 0.15, 0.15], [9.9, 0.0, 0.0, 0.0], [0, 0, 0, 0]], [[0.54, 0.54, 0.54, 0.54], [0, 0, 0, 0], [0.12, 0.12, 0.12, 0.12]], [[0.23, 0.23, 0.23, 0.23], [0, 0, 0, 0], [0.27, 0.27, 0.27, 0.27]], [[0.99, 0.99, 0.99, 0.99], [2.49, 2.49, 2.49, 2.49], [0.29, 0.29, 0.29, 0.29]], [[0.16, 0.16, 3.14, 3.14], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.25, 0.25, 0.25, 0.25], [0, 0, 0, 0], [0.2, 0.2, 0.2, 0.2]], [[0.43, 0.43, 0.43, 0.43], [2.19, 0.0, 0.0, 0.0], [0, 0, 0, 0]], [[0.38, 0.38, 0.38, 0.38], [0, 0, 0, 0], [0.11, 0.11, 0.11, 0.11]], [[0.5, 0.5, 0.5, 0.5], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.32, 0.32, 0.32, 0.32], [0, 0, 0, 0], [0.18, 0.18, 0.18, 0.18]], [[0.35, 0.35, 0.35, 0.35], [1.95, 1.95, 1.95, 1.95], [0.35, 0.35, 0.35, 0.35]], [[0.41, 0.41, 0.41, 0.41], [0, 0, 0, 0], [0.18, 0.18, 0.18, 0.18]], [[0.25, 0.25, 0.0, 0.0], [0, 0, 0, 0], [0.25, 0.25, 0.25, 0.25]], [[0.21, 0.21, 0.0, 0.0], [0.64, 0.64, 0.64, 0.64], [0.21, 0.0, 0.0, 0.0]], [[0.3, 0.3, 0.3, 0.3], [2.14, 2.14, 2.14, 2.14], [0.23, 0.23, 0.23, 0.23]], [[0.57, 0.57, 0.57, 0.57], [0, 0, 0, 0], [0.48, 0.48, 0.48, 0.48]], [[0.13, 0.13, 0.15, 0.15], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.85, 0.85, 0.85, 0.85], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0.9, 0.0, 0.0, 0.0], [0.14, 0.14, 0.14, 0.14]], [[0, 0, 0, 0], [1.7, 0.0, 0.0, 0.0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0.7, 2.0, 2.0, 2.0], [0.2, 0.2, 0.2, 0.2]], [[0, 0, 0, 0], [0, 0, 0, 0], [0.2, 0.2, 0.0, 0.0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0.1, 0.1, 0.15, 0.15]], [[0, 0, 0, 0], [0, 0, 0, 0], [0.5, 0.5, 0.5, 0.5]], [[0, 0, 0, 0], [0, 0, 0, 0], [0.25, 0.25, 0.25, 0.25]], [[0, 0, 0, 0], [0, 0, 0, 0], [0.1, 0.1, 0.1, 0.1]], [[0, 0, 0, 0], [0, 0, 0, 0], [0.09, 0.09, 0.09, 0.09]], [[0, 0, 0, 0], [0, 0, 0, 0], [0.09, 0.09, 0.09, 0.09]], [[0, 0, 0, 0], [0, 0, 0, 0], [0.2, 0.2, 0.2, 0.2]], [[0, 0, 0, 0], [0, 0, 0, 0], [0.5, 0.5, 0.5, 0.5]]], ['11.00*', '9.00', '9.00*', '9.50*', '10.00*', '8.00*', '10.00*', '10.00', '9.00', '12.90*', '11.00*', '9.00*', '10.50', '9.90*', '9.50*', '10.30', '9.30*', '8.00', '10.00*', '8.00*', '9.99', '8.50*', '10.80*', '10.90*', '11.00*', '10.00', '10.00*', '10.00*', '9.30*', '12.00', '9.00*', '8.00', '10.00', '10.00*', '11.50*', '8.50*', '10.00', '10.00*', '9.50', '15.75*', '10.00*', '9.00*', '9.50*', '9.00*', '9.50*', '9.75*', '8.90', '7.40', '8.90*', '8.50*', '10.50', '6.00*', '11.00', '12.00*', '9.00', '9.99*', '8.00*', '9.00*', '9.50*', '9.00', '10.00', '9.80**', '9.50*', '10.00', '17.00*', '10.00*', '10.00*', '9.90*', '9.00', '9.75*', '9.00', '10.75**', '8.50*', '10.00', '7.00*', '9.50**', '11.00*', '12.00', '10.00*', '11.00', '9.00*', '13.00', '8.50*', '10.00*', '12.00*', '8.50', '7.25*', '8.60', '9.00', '14.00']]]

print("######################################################################")
Cards=All[0]
GeneralList=All[1]
print(GeneralList)
#Creation of the first random 100 terms
FullList=[]

n=0
while(len(FullList)<100):
        n+=1
        print("Len of FullList:",len(FullList),"\n")
        FullList.append(CreateCromossomes(Cards,GeneralList))
        if((FullList.count(FullList[-1]))>1):
                del FullList[-1]
        if(not(n%100)):
                print("\n",n%100,"\n")
print("######################################################################")
##
FullList.sort(key=lambda f:f[1])

#print(FullList[0],"\n\n\n\n")
TheList=[]
for j in range(1000):
        #Evaluation of the best 100 terms
        FullList.sort(key=lambda f:f[1])
        FullList=FullList[:100]
        ##

        #Breeding of the best with the rest of the list
        for i in range(1,100):
                FullList.append(BreedingProcess(FullList,Cards,GeneralList,i))
                if((FullList.count(FullList[-1]))>1):
                        del FullList[-1]
        ##

        #Mutation of o random item in the list, which is not the best
        RandomCromossome=randint(1,(len(FullList)-1))

        MutationOne=Mutation(FullList,Cards,GeneralList,RandomCromossome)
        FullList[RandomCromossome]=MutationOne

        if((FullList.count(FullList[RandomCromossome]))>1):
                del FullList[RandomCromossome]
        ##
        if(not(j%1000)):
                TheList.append(FullList[0])


FullList.sort(key=lambda f:f[1])

TheList.append(FullList[0])

print("\n\n\n",FullList[0],"\n\n\n")

ctl=open("TheList.txt","w+")
ctl.close


ctl=open("TheList.txt","a+")
ctl.write(TheList)
ctl.write(GeneralList)
ctl.write(FullList[:10])
ctl.close
os.system('xdg-open TheList.txt')
"""